{"remainingRequest":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\lib\\http.js","dependencies":[{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\lib\\http.js","mtime":1560738790696},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 引入 axios\nimport axios from 'axios';\naxios.defaults.timeout = 5000; //  请求的超时时间 5000ms\n// 测试地址\n// axios.defaults.baseURL = '/api/';\n// 线上地址\n// axios.defaults.baseURL = '';\n// if (process.env.NODE_ENV == 'development') {    \n//   axios.defaults.baseURL = 'https://www.baidu.com';} \n// else if (process.env.NODE_ENV == 'debug') {    \n//   axios.defaults.baseURL = 'https://www.ceshi.com';\n// } \n// else if (process.env.NODE_ENV == 'production') {    \n//   axios.defaults.baseURL = 'https://www.production.com';\n// }\n// request拦截器\n\naxios.interceptors.request.use(function (config) {\n  // 除了登录 都增加token\n  if (config.url.indexOf('/login') == -1) {\n    config.headers.Authorization = window.sessionStorage.getItem('token');\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nvar http = {\n  get: function get(url) {\n    return new Promise(function (resolve, reject) {\n      axios.get(url).then(function (response) {\n        resolve(response.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n\n  /** post 请求\r\n   * @param  {接口地址} url\r\n   * @param  {请求参数} params\r\n   */\n  post: function post(url, params) {\n    return new Promise(function (resolve, reject) {\n      axios.post(url, params).then(function (response) {\n        resolve(response.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};\nexport default http;",{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\lib\\http.js"],"names":["axios","defaults","timeout","interceptors","request","use","config","url","indexOf","headers","Authorization","window","sessionStorage","getItem","error","Promise","reject","http","get","resolve","then","response","data","catch","post","params"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,IAAzB,C,CAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA,MAAIA,MAAM,CAACC,GAAP,CAAWC,OAAX,CAAmB,QAAnB,KAAgC,CAAC,CAArC,EAAwC;AACtCF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,CAA/B;AACD;;AACD,SAAOP,MAAP;AACD,CAPH,EAQE,UAAUQ,KAAV,EAAiB;AACf;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXH;AAeA,IAAIG,IAAI,GAAG;AACTC,EAAAA,GAAG,EAAE,aAAUX,GAAV,EAAe;AAClB,WAAO,IAAIQ,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAqB;AACtChB,MAAAA,KAAK,CAACkB,GAAN,CAAUX,GAAV,EACGa,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,QAAAA,OAAO,CAACE,QAAQ,CAACC,IAAV,CAAP;AACD,OAHH,EAIGC,KAJH,CAIS,UAACT,KAAD,EAAW;AAChBE,QAAAA,MAAM,CAACF,KAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD,GAXQ;;AAYT;;;;AAIAU,EAAAA,IAAI,EAAE,cAAUjB,GAAV,EAAekB,MAAf,EAAuB;AAC3B,WAAO,IAAIV,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAqB;AACtChB,MAAAA,KAAK,CAACwB,IAAN,CAAWjB,GAAX,EAAgBkB,MAAhB,EACGL,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,QAAAA,OAAO,CAACE,QAAQ,CAACC,IAAV,CAAP;AACD,OAHH,EAIGC,KAJH,CAIS,UAACT,KAAD,EAAW;AAChBE,QAAAA,MAAM,CAACF,KAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;AA1BQ,CAAX;AA4BA,eAAeG,IAAf","sourcesContent":["// 引入 axios\r\nimport axios from 'axios'\r\naxios.defaults.timeout = 5000 //  请求的超时时间 5000ms\r\n// 测试地址\r\n// axios.defaults.baseURL = '/api/';\r\n// 线上地址\r\n// axios.defaults.baseURL = '';\r\n// if (process.env.NODE_ENV == 'development') {    \r\n//   axios.defaults.baseURL = 'https://www.baidu.com';} \r\n// else if (process.env.NODE_ENV == 'debug') {    \r\n//   axios.defaults.baseURL = 'https://www.ceshi.com';\r\n// } \r\n// else if (process.env.NODE_ENV == 'production') {    \r\n//   axios.defaults.baseURL = 'https://www.production.com';\r\n// }\r\n\r\n\r\n// request拦截器\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    // 除了登录 都增加token\r\n    if (config.url.indexOf('/login') == -1) {\r\n      config.headers.Authorization = window.sessionStorage.getItem('token')\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n\r\nvar http = {\r\n  get: function (url) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get(url)\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    })\r\n  },\r\n  /** post 请求\r\n   * @param  {接口地址} url\r\n   * @param  {请求参数} params\r\n   */\r\n  post: function (url, params) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post(url, params)\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    })\r\n  }\r\n}\r\nexport default http\r\n"]}]}