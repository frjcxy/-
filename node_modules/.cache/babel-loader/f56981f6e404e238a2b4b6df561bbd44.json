{"remainingRequest":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\components\\pages\\login\\register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\components\\pages\\login\\register.vue","mtime":1560738790670},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\lcsc-demo\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { log } from \"util\";\nexport default {\n  props: {},\n  name: \"app\",\n  components: {},\n  data: function data() {\n    return {\n      verificationCode: \"\",\n      //生成的验证码\n      // 表单验证的数据\n      ruleForm: {\n        checkCode: \"\",\n        phone: \"\",\n        QQ: \"\",\n        phoneCode: \"\",\n        // 是否勾选服务条款\n        checked: false\n      },\n      // 表单验证的规则\n      rules: {\n        phone: [{\n          required: true,\n          message: \"请输入11位数手机号\",\n          trigger: \"blur\"\n        }, {\n          min: 11,\n          max: 11,\n          message: \"长度在11个字符\",\n          trigger: \"blur\"\n        }],\n        checkCode: [{\n          required: true,\n          message: \"请输入图片中的校验码\",\n          trigger: \"blur\"\n        }, {\n          min: 4,\n          max: 4,\n          message: \"长度在4个字符\",\n          trigger: \"blur\"\n        }],\n        phoneCode: [{\n          required: true,\n          message: \"请输入手机验证码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 6,\n          message: \"长度在6个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created: function created() {// this.transmitCode();\n  },\n  methods: {\n    // 图片验证码\n    createCode: function createCode() {\n      //通过随机数生成验证码\n      this.verificationCode = \"\";\n      var code = \"\";\n      var codeLength = 4; //验证码长度\n\n      var random = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n\n      for (var i = 0; i < codeLength; i++) {\n        var index = Math.floor(Math.random() * 36);\n        code += random[index];\n      }\n\n      this.verificationCode = code;\n    },\n    confirmTheCode: function confirmTheCode() {\n      //验证函数\n      var customerCode = this.ruleForm.checkCode.toUpperCase(); //把你输入的小写转化为大写\n\n      if (customerCode == 0) {\n        this.createCode();\n        this.ruleForm.checkCode = \"\";\n        alert(\"请输入验证码\");\n      } else if (customerCode != this.verificationCode) {\n        this.createCode();\n        this.ruleForm.checkCode = \"\";\n        alert(\"验证码不正确，请重新输入\");\n      }\n    },\n    //  发送验证码\n    transmitCode: function () {\n      var _transmitCode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var phone, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.ruleForm.phone) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.$message({\n                  message: \"请输入手机号码！\",\n                  type: \"warning\"\n                });\n                _context.next = 12;\n                break;\n\n              case 4:\n                if (!this.ruleForm.checkCode) {\n                  _context.next = 11;\n                  break;\n                }\n\n                phone = this.ruleForm.phone;\n                _context.next = 8;\n                return this.$http.get(\"/api/member/sso/getAuthCode?telephone=\".concat(phone));\n\n              case 8:\n                res = _context.sent;\n                _context.next = 12;\n                break;\n\n              case 11:\n                this.$message({\n                  message: \"请输入图片验证！\",\n                  type: \"warning\"\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function transmitCode() {\n        return _transmitCode.apply(this, arguments);\n      }\n\n      return transmitCode;\n    }(),\n    // 勾选服务条款\n    handleSelectionChange: function handleSelectionChange(value) {\n      this.ruleForm.checked = value;\n    },\n    // 下一步\n    next: function next(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$store.state.loginPhone = _this.ruleForm.phone;\n          _this.$store.state.loginCode = _this.ruleForm.phoneCode;\n          _this.$store.state.QQ = _this.ruleForm.QQ;\n\n          if (_this.ruleForm.checked) {\n            _this.$router.push(\"/pwd\");\n          } else {\n            _this.$message({\n              message: \"请勾选服务条款！\",\n              type: \"warning\"\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.createCode();\n  }\n};",{"version":3,"sources":["register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"register\">\r\n    <!-- 用户注册界面 -->\r\n    <div class=\"from-menu\">\r\n      <div class=\"title\">\r\n        <h2>\r\n          用户注册\r\n          <i class=\"el-icon-edit\"></i>\r\n        </h2>\r\n        <router-link to=\"/login\">\r\n          已有账号？\r\n          <i>请登录>>></i>\r\n        </router-link>\r\n      </div>\r\n      <!-- 注册表单 -->\r\n      <el-form\r\n        class=\"registerForm\"\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"80px\"\r\n        ref=\"ruleForm\"\r\n      >\r\n        <el-form-item label=\"填写您的手机号码：\" prop=\"phone\">\r\n          <el-input v-model=\"ruleForm.phone\" placeholder=\"填写11位长度手机号\" @keyup.enter.native=\"next('ruleForm')\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"输入图片校验码：\" prop=\"checkCode\">\r\n          <el-input v-model=\"ruleForm.checkCode\" placeholder=\"填写图片校验码\" @keyup.enter.native=\"next('ruleForm')\"></el-input>\r\n          <div class=\"img-code\">\r\n            <span class=\"code-style\" @click=\"createCode\">{{verificationCode}}</span>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"输入手机验证码：\" prop=\"phoneCode\">\r\n          <el-input v-model=\"ruleForm.phoneCode\" placeholder=\"填写手机收到的验证码\" @keyup.enter.native=\"next('ruleForm')\"></el-input>\r\n          <el-button type=\"warning\" plain class=\"code-btn\" @click=\"transmitCode\">发送验证码</el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"填写您的QQ（选填）：\">\r\n          <el-input v-model=\"ruleForm.QQ\" placeholder=\"填写您的QQ\" @keyup.enter.native=\"next('ruleForm')\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label>\r\n          <el-checkbox\r\n            v-model=\"ruleForm.checked\"\r\n            @change=\"handleSelectionChange\"\r\n            label=\"我已看过并同意\"\r\n            name=\"type\"\r\n          ></el-checkbox>\r\n          <a href=\"#\" class=\"clause\">《服务条款》</a>\r\n        </el-form-item>\r\n        <el-form-item label>\r\n          <el-button type=\"warning\" class=\"next\" @click=\"next('ruleForm'),confirmTheCode()\">下一步</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 注册说明 -->\r\n      <div class=\"explain\">\r\n        <div class=\"explain-left\">\r\n          <ul>\r\n            <li>1、系统将发送校验码到您填写的这个手机号码</li>\r\n            <li>2、港澳台及海外客户请直接联系我司工作人员注册</li>\r\n            <li>3、注册成功帐号，您的这个手机号码将可作为手机帐号登录</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"explain-right\">\r\n          <img src alt=\"放置二维码\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { log } from \"util\";\r\nexport default {\r\n  props: {},\r\n  name: \"app\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      verificationCode: \"\", //生成的验证码\r\n      // 表单验证的数据\r\n      ruleForm: {\r\n        checkCode: \"\",\r\n        phone: \"\",\r\n        QQ: \"\",\r\n        phoneCode: \"\",\r\n        // 是否勾选服务条款\r\n        checked: false\r\n      },\r\n\r\n      // 表单验证的规则\r\n      rules: {\r\n        phone: [\r\n          { required: true, message: \"请输入11位数手机号\", trigger: \"blur\" },\r\n          { min: 11, max: 11, message: \"长度在11个字符\", trigger: \"blur\" }\r\n        ],\r\n        checkCode: [\r\n          { required: true, message: \"请输入图片中的校验码\", trigger: \"blur\" },\r\n          { min: 4, max: 4, message: \"长度在4个字符\", trigger: \"blur\" }\r\n        ],\r\n        phoneCode: [\r\n          { required: true, message: \"请输入手机验证码\", trigger: \"blur\" },\r\n          { min: 6, max: 6, message: \"长度在6个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n\r\n  created() {\r\n    // this.transmitCode();\r\n  },\r\n\r\n  methods: {\r\n    // 图片验证码\r\n    createCode: function() {\r\n      //通过随机数生成验证码\r\n      this.verificationCode = \"\";\r\n      var code = \"\";\r\n      var codeLength = 4; //验证码长度\r\n      var random = new Array(\r\n        0,\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6,\r\n        7,\r\n        8,\r\n        9,\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\",\r\n        \"F\",\r\n        \"G\",\r\n        \"H\",\r\n        \"I\",\r\n        \"J\",\r\n        \"K\",\r\n        \"L\",\r\n        \"M\",\r\n        \"N\",\r\n        \"O\",\r\n        \"P\",\r\n        \"Q\",\r\n        \"R\",\r\n        \"S\",\r\n        \"T\",\r\n        \"U\",\r\n        \"V\",\r\n        \"W\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"Z\"\r\n      );\r\n      for (var i = 0; i < codeLength; i++) {\r\n        var index = Math.floor(Math.random() * 36);\r\n        code += random[index];\r\n      }\r\n      this.verificationCode = code;\r\n    },\r\n    confirmTheCode: function() {\r\n      //验证函数\r\n      var customerCode = this.ruleForm.checkCode.toUpperCase(); //把你输入的小写转化为大写\r\n      if (customerCode == 0) {\r\n        this.createCode();\r\n        this.ruleForm.checkCode = \"\";\r\n        alert(\"请输入验证码\");\r\n      } else if (customerCode != this.verificationCode) {\r\n        this.createCode();\r\n        this.ruleForm.checkCode = \"\";\r\n        alert(\"验证码不正确，请重新输入\");\r\n      }\r\n    },\r\n\r\n    //  发送验证码\r\n    async transmitCode() {\r\n      if (!this.ruleForm.phone) {\r\n        this.$message({\r\n          message: \"请输入手机号码！\",\r\n          type: \"warning\"\r\n        });\r\n      } else if (this.ruleForm.checkCode) {\r\n        let phone = this.ruleForm.phone;\r\n        let res = await this.$http.get(\r\n          `/api/member/sso/getAuthCode?telephone=${phone}`\r\n        );\r\n      } else {\r\n        this.$message({\r\n          message: \"请输入图片验证！\",\r\n          type: \"warning\"\r\n        });\r\n      }\r\n    },\r\n\r\n    // 勾选服务条款\r\n    handleSelectionChange(value) {\r\n      this.ruleForm.checked = value;\r\n    },\r\n\r\n    // 下一步\r\n    next(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.$store.state.loginPhone = this.ruleForm.phone;\r\n          this.$store.state.loginCode = this.ruleForm.phoneCode;\r\n          this.$store.state.QQ = this.ruleForm.QQ;\r\n          if (this.ruleForm.checked) {\r\n            this.$router.push(\"/pwd\");\r\n          } else {\r\n            this.$message({\r\n              message: \"请勾选服务条款！\",\r\n              type: \"warning\"\r\n            });\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.createCode();\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scope>\r\n#register {\r\n  // 表单主体\r\n  .from-menu {\r\n    width: 940px;\r\n    height: 600px;\r\n    border-radius: 10px;\r\n    background-color: #fff;\r\n    margin-top: 20px;\r\n    .title {\r\n      width: 100%;\r\n      height: 78px;\r\n      line-height: 78px;\r\n      box-shadow: 0px 5px 0px #ccc;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      h2 {\r\n        padding-left: 30px;\r\n        font-size: 22px;\r\n        color: #6f6f6f;\r\n      }\r\n      a {\r\n        padding-right: 30px;\r\n        font-size: 14px;\r\n        color: #6f6f6f;\r\n        font-weight: bold;\r\n        i {\r\n          color: #f00;\r\n        }\r\n      }\r\n    }\r\n    // 表单\r\n    .registerForm {\r\n      padding: 30px 100px 0px;\r\n      border-bottom: 1px solid#ccc;\r\n      .el-form-item__label {\r\n        font-size: 16px;\r\n        width: 200px !important;\r\n      }\r\n      .el-form-item__content {\r\n        width: 340px;\r\n        margin-left: 200px !important;\r\n        position: relative;\r\n        .el-input__inner {\r\n          border: 1px solid #d7d7d7;\r\n        }\r\n        // 图片验证\r\n\r\n        .img-code {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          position: absolute;\r\n          right: -116px;\r\n          top: 5px;\r\n        }\r\n\r\n        .code-style {\r\n          display: inline-block;\r\n          text-align: center;\r\n          width: 80px;\r\n          height: 30px;\r\n          line-height: 30px;\r\n          background-color: #0677fe;\r\n          font-size: 16px;\r\n          color: #fff;\r\n          font-weight: bold;\r\n          cursor: pointer;\r\n          margin-right: 4px;\r\n        }\r\n\r\n        // 手机验证码\r\n        .code-btn {\r\n          position: absolute;\r\n          right: -144px;\r\n          bottom: 0px;\r\n        }\r\n\r\n        .el-checkbox {\r\n          margin-right: 0;\r\n        }\r\n\r\n        .el-button.next {\r\n          font-size: 22px;\r\n          background-color: #fc6e06;\r\n          padding: 10px 80px;\r\n        }\r\n      }\r\n      .clause {\r\n        color: #409eff;\r\n      }\r\n    }\r\n\r\n    // 注册说明\r\n    .explain {\r\n      padding: 0 80px;\r\n      margin-top: 2px;\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      .explain-left {\r\n        font-size: 14px;\r\n        color: #666;\r\n        line-height: 30px;\r\n        flex: 1;\r\n      }\r\n\r\n      .explain-right {\r\n        width: 258px;\r\n        height: 110px;\r\n        background-color: #ccc;\r\n        img {\r\n          display: block;\r\n          width: 100px;\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"],"sourceRoot":"src/components/pages/login"}]}