{"remainingRequest":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\components\\pages\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\src\\components\\pages\\login\\login.vue","mtime":1560738790669},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\lcsc-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\lcsc-demo\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// js-Cookies\nimport Cookies from \"js-cookie\";\nexport default {\n  data: function data() {\n    // 验证手机号\n    var checkPhone = function checkPhone(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"手机号码不可为空\"));\n      } else {\n        if (value !== \"\") {\n          var reg = /^1[3456789]\\d{9}$/;\n\n          if (!reg.test(value)) {\n            callback(new Error(\"请输入有效的手机号码\"));\n          }\n        }\n\n        callback();\n      }\n    };\n\n    return {\n      // 当前登录时间\n      nowLoginTime: \"\",\n      verificationCode: \"\",\n      //生成的验证码\n      ruleForm1: {\n        username: \"\",\n        password: \"\",\n        selfLogin: \"\"\n      },\n      ruleForm2: {\n        phone: \"\",\n        selfLogin: \"\",\n        checkCode: \"\",\n        phoneCode: \"\"\n      },\n      // 表单的验证规则\n      rules1: {\n        username: [// required必须 message 提示信息 trigger 触发方式\n        // min 最小 max 最大\n        {\n          required: true,\n          message: \"用户名不能为空\",\n          trigger: \"blur\"\n        }, {\n          min: 4,\n          max: 21,\n          message: \"长度在 4 到 21 个字符\",\n          trigger: \"change\"\n        }],\n        password: [// required必须 message 提示信息 trigger 触发方式\n        // min 最小 max 最大\n        {\n          required: true,\n          message: \"密码不能为空\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 18,\n          message: \"长度在 3 到 18 个字符\",\n          trigger: \"change\"\n        }]\n      },\n      rules2: {\n        phone: [{\n          validator: checkPhone,\n          trigger: \"blur\"\n        }],\n        checkCode: [{\n          required: true,\n          message: \"验证码不能为空\",\n          trigger: \"blur\"\n        }],\n        phoneCode: [{\n          required: true,\n          message: \"请输入手机验证码\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    // 图片验证码\n    createCode: function createCode() {\n      //通过随机数生成验证码\n      this.verificationCode = \"\";\n      var code = \"\";\n      var codeLength = 4; //验证码长度\n\n      var random = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n\n      for (var i = 0; i < codeLength; i++) {\n        var index = Math.floor(Math.random() * 36);\n        code += random[index];\n      }\n\n      this.verificationCode = code;\n    },\n    confirmTheCode: function confirmTheCode() {\n      //验证函数\n      var customerCode = this.ruleForm.checkCode.toUpperCase(); //把你输入的小写转化为大写\n\n      if (customerCode == 0) {\n        this.createCode();\n        this.ruleForm.checkCode = \"\";\n        alert(\"请输入验证码\");\n      } else if (customerCode != this.verificationCode) {\n        this.createCode();\n        this.ruleForm.checkCode = \"\";\n        alert(\"验证码不正确，请重新输入\");\n      } else {\n        alert(\"输入正确\");\n      }\n    },\n    // 账号密码登入验证\n    loginBtn: function () {\n      var _loginBtn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(ruleForm1) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$refs[ruleForm1].validate(function (valid) {\n                  if (valid) {\n                    // 数据正确\n                    _this.$http.post(\"/api/member/sso/login?username=\".concat(_this.ruleForm1.username, \"&password=\").concat(_this.ruleForm1.password), _this.ruleForm1).then(function (res) {\n                      if (res.code === 404) {\n                        // 错误 弹框 用户名或密码错误\n                        _this.$message.error(res.message);\n                      } else {\n                        // 成功弹框\n                        _this.$message.success(res.message); // 保存token\n\n\n                        window.sessionStorage.setItem(\"token\", res.data.token); // 存cookie\n\n                        Cookies.set(\"username\", _this.ruleForm1.username); // 获取登录时间\n\n                        _this.nowLoginTime = new Date();\n                        Cookies.set('loginTime', _this.nowLoginTime); // 使用路由提供的方式进行跳转到上一页\n\n                        _this.$router.go(-1);\n                      }\n                    });\n                  } else {\n                    // 数据错误 this.$http\n                    // this.$message.error(\"请正确输入用户名和密码\");\n                    return false;\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loginBtn(_x) {\n        return _loginBtn.apply(this, arguments);\n      }\n\n      return loginBtn;\n    }(),\n    // 动态登录\n    // 验证码\n    getVerificationCode: function () {\n      var _getVerificationCode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.ruleForm2.phone == \"\")) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                this.$message({\n                  message: \"请输入手机号码！\",\n                  type: \"warning\"\n                });\n                _context2.next = 13;\n                break;\n\n              case 4:\n                if (!(this.ruleForm2.checkCode === this.verificationCode)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                console.log(112);\n                _context2.next = 8;\n                return this.$http.get(\"/api/member/sso/getAuthCode?telephone=\".concat(this.ruleForm2.phone));\n\n              case 8:\n                res = _context2.sent;\n                this.ruleForm2.phoneCode = res.data;\n                _context2.next = 13;\n                break;\n\n              case 12:\n                this.$message({\n                  message: \"请先通过图片验证！\",\n                  type: \"warning\"\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getVerificationCode() {\n        return _getVerificationCode.apply(this, arguments);\n      }\n\n      return getVerificationCode;\n    }()\n  },\n  mounted: function mounted() {\n    this.createCode();\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <img src=\"../../../assets/login_left.png\" alt>\r\n    <!-- 用户注册界面 -->\r\n    <el-tabs type=\"border-card\">\r\n      <!-- 用户登录 -->\r\n      <el-tab-pane>\r\n        <span slot=\"label\">\r\n          <i class=\"el-icon-s-custom\"></i> 用户登录\r\n        </span>\r\n        <el-form\r\n          :model=\"ruleForm1\"\r\n          status-icon\r\n          ref=\"ruleForm1\"\r\n          label-width=\"100px\"\r\n          class=\"demo-ruleForm\"\r\n          label-position=\"top\"\r\n          :rules=\"rules1\"\r\n        >\r\n          <el-form-item prop=\"username\" class=\"new_login\" style=\"margin-top:30px;\">\r\n            <span class=\"new_login_img\">\r\n              <i class=\"el-icon-s-custom icon\"></i>\r\n            </span>\r\n            <el-input\r\n              @keyup.enter.native=\"loginBtn('ruleForm1')\"\r\n              v-model.trim=\"ruleForm1.username\"\r\n              placeholder=\"客户编号/手机号码/邮箱\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\" class=\"new_login\" style=\"margin-top:30px;\">\r\n            <span class=\"new_login_img\">\r\n              <i class=\"el-icon-lock icon\"></i>\r\n            </span>\r\n            <el-input\r\n              type=\"password\"\r\n              v-model.trim=\"ruleForm1.password\"\r\n              autocomplete=\"off\"\r\n              placeholder=\"请输入密码\"\r\n              @keyup.enter.native=\"loginBtn('ruleForm1')\"\r\n            ></el-input>\r\n          </el-form-item>\r\n\r\n          <!-- <el-form-item prop=\"selfLogin\">\r\n            <el-checkbox class=\"check-login\" checked style=\"margin: 0;\">自动登录</el-checkbox>\r\n          </el-form-item> -->\r\n          <el-form-item>\r\n            <el-button\r\n              type=\"warning\"\r\n              @click=\"loginBtn('ruleForm1')\"\r\n              class=\"login-btn\"\r\n            >登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-tab-pane>\r\n      <!-- 动态密码登录 -->\r\n      <el-tab-pane>\r\n        <span slot=\"label\">动态密码登录</span>\r\n        <el-form\r\n          :model=\"ruleForm2\"\r\n          status-icon\r\n          ref=\"ruleForm2\"\r\n          label-width=\"100px\"\r\n          class=\"demo-ruleForm\"\r\n          label-position=\"top\"\r\n          :rules=\"rules2\"\r\n        >\r\n          <el-form-item prop=\"phone\" class=\"new_login\" style=\"margin-top:30px;\">\r\n            <span class=\"new_login_img\">\r\n              <i class=\"el-icon-mobile icon\"></i>\r\n            </span>\r\n            <el-input\r\n              v-model.trim=\"ruleForm2.phone\"\r\n              placeholder=\"请输入手机号\"\r\n              @keyup.enter.native=\"getVerificationCode\"\r\n            ></el-input>\r\n            <el-button\r\n              type=\"warning\"\r\n              class=\"code-btn\"\r\n              size=\"small\"\r\n              plain\r\n              @click=\"getVerificationCode\"\r\n            >发送验证码</el-button>\r\n          </el-form-item>\r\n          <el-form-item prop=\"checkCode\" class=\"new_login\" style=\"margin-top:30px;\">\r\n            <span class=\"new_login_img\">\r\n              <i class=\"el-icon-s-ticket icon\"></i>\r\n            </span>\r\n            <el-input\r\n              placeholder=\"请输入图片验证码\"\r\n              v-model.trim=\"ruleForm2.checkCode\"\r\n              @keyup.enter.native=\"getVerificationCode\"\r\n            ></el-input>\r\n            <!-- 图片验证码-->\r\n            <span class=\"code-style\" @click=\"createCode\">{{verificationCode}}</span>\r\n          </el-form-item>\r\n          <el-form-item prop=\"phoneCode\" class=\"new_login\" style=\"margin-top:30px;\">\r\n            <span class=\"new_login_img\">\r\n              <i class=\"el-icon-more-outline icon\"></i>\r\n            </span>\r\n            <el-input\r\n              v-model.trim=\"ruleForm2.phoneCode\"\r\n              placeholder=\"请输入手机验证码\"\r\n              @keyup.enter.native=\"getVerificationCode\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <!-- <el-form-item>\r\n            <el-checkbox class=\"check-login\" checked style=\"margin: 0;\">自动登录</el-checkbox>\r\n          </el-form-item> -->\r\n          <el-form-item>\r\n            <el-button\r\n              type=\"warning\"\r\n              @click=\"phoneLogin('ruleForm2'),confirmTheCode()\"\r\n              class=\"login-btn\"\r\n            >登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-tab-pane>\r\n      <div class=\"get_back\">\r\n        <span class=\"wechat\">\r\n          <a href=\"#\">\r\n            <i class=\"el-icon-s-comment\"></i>微信\r\n          </a>\r\n        </span>\r\n        <span class=\"register\">\r\n          <router-link to=\"/retrievePwd\">找回密码</router-link>\r\n          <router-link to=\"/register\">免费注册</router-link>\r\n        </span>\r\n      </div>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n<script>\r\n// js-Cookies\r\nimport Cookies from \"js-cookie\";\r\nexport default {\r\n  data() {\r\n    // 验证手机号\r\n    var checkPhone = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"手机号码不可为空\"));\r\n      } else {\r\n        if (value !== \"\") {\r\n          var reg = /^1[3456789]\\d{9}$/;\r\n          if (!reg.test(value)) {\r\n            callback(new Error(\"请输入有效的手机号码\"));\r\n          }\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      // 当前登录时间\r\n      nowLoginTime: \"\",\r\n      verificationCode: \"\", //生成的验证码\r\n      ruleForm1: {\r\n        username: \"\",\r\n        password: \"\",\r\n        selfLogin: \"\"\r\n      },\r\n      ruleForm2: {\r\n        phone: \"\",\r\n        selfLogin: \"\",\r\n        checkCode: \"\",\r\n        phoneCode: \"\"\r\n      },\r\n      // 表单的验证规则\r\n      rules1: {\r\n        username: [\r\n          // required必须 message 提示信息 trigger 触发方式\r\n          // min 最小 max 最大\r\n          { required: true, message: \"用户名不能为空\", trigger: \"blur\" },\r\n          {\r\n            min: 4,\r\n            max: 21,\r\n            message: \"长度在 4 到 21 个字符\",\r\n            trigger: \"change\"\r\n          }\r\n        ],\r\n        password: [\r\n          // required必须 message 提示信息 trigger 触发方式\r\n          // min 最小 max 最大\r\n          { required: true, message: \"密码不能为空\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 18,\r\n            message: \"长度在 3 到 18 个字符\",\r\n            trigger: \"change\"\r\n          }\r\n        ]\r\n      },\r\n      rules2: {\r\n        phone: [\r\n          {\r\n            validator: checkPhone,\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        checkCode: [\r\n          { required: true, message: \"验证码不能为空\", trigger: \"blur\" }\r\n        ],\r\n        phoneCode: [\r\n          { required: true, message: \"请输入手机验证码\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // 图片验证码\r\n    createCode() {\r\n      //通过随机数生成验证码\r\n      this.verificationCode = \"\";\r\n      var code = \"\";\r\n      var codeLength = 4; //验证码长度\r\n      var random = new Array(\r\n        0,\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6,\r\n        7,\r\n        8,\r\n        9,\r\n        \"A\",\r\n        \"B\",\r\n        \"C\",\r\n        \"D\",\r\n        \"E\",\r\n        \"F\",\r\n        \"G\",\r\n        \"H\",\r\n        \"I\",\r\n        \"J\",\r\n        \"K\",\r\n        \"L\",\r\n        \"M\",\r\n        \"N\",\r\n        \"O\",\r\n        \"P\",\r\n        \"Q\",\r\n        \"R\",\r\n        \"S\",\r\n        \"T\",\r\n        \"U\",\r\n        \"V\",\r\n        \"W\",\r\n        \"X\",\r\n        \"Y\",\r\n        \"Z\"\r\n      );\r\n      for (var i = 0; i < codeLength; i++) {\r\n        var index = Math.floor(Math.random() * 36);\r\n        code += random[index];\r\n      }\r\n      this.verificationCode = code;\r\n    },\r\n    confirmTheCode() {\r\n      //验证函数\r\n      var customerCode = this.ruleForm.checkCode.toUpperCase(); //把你输入的小写转化为大写\r\n      if (customerCode == 0) {\r\n        this.createCode();\r\n        this.ruleForm.checkCode = \"\";\r\n        alert(\"请输入验证码\");\r\n      } else if (customerCode != this.verificationCode) {\r\n        this.createCode();\r\n        this.ruleForm.checkCode = \"\";\r\n        alert(\"验证码不正确，请重新输入\");\r\n      } else {\r\n        alert(\"输入正确\");\r\n      }\r\n    },\r\n\r\n    // 账号密码登入验证\r\n    async loginBtn(ruleForm1) {\r\n      this.$refs[ruleForm1].validate(valid => {\r\n        if (valid) {\r\n          // 数据正确\r\n          this.$http\r\n            .post(\r\n              `/api/member/sso/login?username=${\r\n                this.ruleForm1.username\r\n              }&password=${this.ruleForm1.password}`,\r\n              this.ruleForm1\r\n            )\r\n            .then(res => {\r\n              if (res.code === 404) {\r\n                // 错误 弹框 用户名或密码错误\r\n                this.$message.error(res.message);\r\n              } else {\r\n                // 成功弹框\r\n                this.$message.success(res.message);\r\n                // 保存token\r\n                window.sessionStorage.setItem(\"token\", res.data.token);\r\n                // 存cookie\r\n                Cookies.set(\"username\", this.ruleForm1.username);\r\n                // 获取登录时间\r\n                this.nowLoginTime = new Date();\r\n                Cookies.set('loginTime',this.nowLoginTime)\r\n                // 使用路由提供的方式进行跳转到上一页\r\n                this.$router.go(-1);\r\n              }\r\n            });\r\n        } else {\r\n          // 数据错误 this.$http\r\n          // this.$message.error(\"请正确输入用户名和密码\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 动态登录\r\n    // 验证码\r\n    async getVerificationCode() {\r\n      if (this.ruleForm2.phone == \"\") {\r\n        this.$message({\r\n          message: \"请输入手机号码！\",\r\n          type: \"warning\"\r\n        });\r\n      } else {\r\n        if (this.ruleForm2.checkCode === this.verificationCode) {\r\n          console.log(112);\r\n\r\n          let res = await this.$http.get(\r\n            `/api/member/sso/getAuthCode?telephone=${this.ruleForm2.phone}`\r\n          );\r\n          this.ruleForm2.phoneCode = res.data;\r\n        } else {\r\n          this.$message({\r\n            message: \"请先通过图片验证！\",\r\n            type: \"warning\"\r\n          });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.createCode();\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scope>\r\n#login {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .el-tabs__nav {\r\n    .is-active {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n  // 表单主体\r\n  .el-tabs {\r\n    width: 370px;\r\n    background-color: #fff;\r\n    margin-top: 40px;\r\n    float: right;\r\n    .el-tabs__nav {\r\n      width: 100%;\r\n      background-color: #e6e6e6;\r\n      .el-tabs__item {\r\n        width: 50%;\r\n        text-align: center;\r\n        span {\r\n          font-size: 18px;\r\n          i {\r\n            color: #ff6600;\r\n            font-size: 24px;\r\n            line-height: 24px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .el-tabs__content {\r\n      padding: 10px 30px;\r\n      //   用户登录输入框\r\n      .new_login {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .el-form-item {\r\n          padding: 0;\r\n        }\r\n        .el-form-item__content {\r\n          width: 100%;\r\n          height: 40px;\r\n          display: flex;\r\n\r\n          .new_login_img {\r\n            width: 38px;\r\n          }\r\n          .el-input {\r\n            flex: 1;\r\n            .el-input__inner {\r\n              border-radius: 0;\r\n            }\r\n          }\r\n        }\r\n\r\n        .code-btn {\r\n          padding: 0px 5px;\r\n        }\r\n\r\n        .icon {\r\n          display: inline-block;\r\n          width: 38px;\r\n          height: 38px;\r\n          background-color: #dcdfe6;\r\n          font-size: 18px;\r\n          color: #bebebe;\r\n          text-align: center;\r\n          line-height: 38px;\r\n          border: 1px solid #ccc;\r\n        }\r\n\r\n        // 图片验证\r\n        .code-style {\r\n          display: inline-block;\r\n          text-align: center;\r\n          width: 80px;\r\n          height: 40px;\r\n          line-height: 40px;\r\n          background-color: #0677fe;\r\n          font-size: 16px;\r\n          color: #fff;\r\n          font-weight: bold;\r\n          cursor: pointer;\r\n          margin-left: 2px;\r\n        }\r\n      }\r\n      // 自动登录\r\n      .check-login {\r\n        margin: 20px 0;\r\n      }\r\n      // 登录按钮\r\n      .login-btn {\r\n        width: 100%;\r\n        font-size: 18px;\r\n      }\r\n      //找回密码\r\n      .get_back {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin: 10px 0;\r\n        span {\r\n          font-size: 14px;\r\n          line-height: 24px;\r\n          &.wechat {\r\n            a {\r\n              i {\r\n                color: #0f0;\r\n                font-size: 24px;\r\n                line-height: 24px;\r\n                vertical-align: middle;\r\n              }\r\n            }\r\n          }\r\n\r\n          &.register {\r\n            a {\r\n              color: #409eff;\r\n              margin-left: 20px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"],"sourceRoot":"src/components/pages/login"}]}